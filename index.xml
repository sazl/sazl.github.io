<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>sazl</title>
    <link>https://sazl.ca/</link>
    <description>Recent content on sazl</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 30 Nov 2019 10:12:47 -0500</lastBuildDate><atom:link href="https://sazl.ca/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Novation X-Station SYSEX</title>
      <link>https://sazl.ca/novation-x-station-sysex/</link>
      <pubDate>Sat, 30 Nov 2019 10:12:47 -0500</pubDate>
      
      <guid>https://sazl.ca/novation-x-station-sysex/</guid>
      <description>Figuring out X-Station&amp;rsquo;s SYSEX format.
SYSEX System Exclusive MIDI files are used by manufacturers for proprietary programming of their controllers.
The basic message format:
F0 &amp;lt;metadata&amp;gt; &amp;lt;data&amp;gt; F7   Byte F0: Start marker Byte F7: End marker Metadata: Manufacturer code, data size (variable size) Data: Data to be sent (variable size)  References https://www.csie.ntu.edu.tw/~r92092/ref/midi/
https://github.com/asb2m10/dexed/blob/master/Documentation/sysex-format.txt
https://electronicmusic.fandom.com/wiki/System_exclusive
https://github.com/francoisgeorgy/BS2-SysEx</description>
    </item>
    
    <item>
      <title>Electribe Firmware Downgrade</title>
      <link>https://sazl.ca/electribe-firmware-downgrade/</link>
      <pubDate>Thu, 28 Nov 2019 11:14:47 -0500</pubDate>
      
      <guid>https://sazl.ca/electribe-firmware-downgrade/</guid>
      <description>Pre-conditions  Ensure your electribe synth is on version 2.02  Preparation Download firmware v1.06 for the sampler electribe Download firmware v.1.10 for the synth electribe   These 2 firmwares lack protection checking when swapping between electribes. v1.17+ of the synth version and v1.14+ of the sampler will have protection checking, preventing you from swapping firmwares
 Downgrading the Synth Version Edit the v1.10 header of the synth firmware to look like v2.</description>
    </item>
    
    <item>
      <title>Game Review</title>
      <link>https://sazl.ca/game-review/</link>
      <pubDate>Sat, 09 Mar 2019 09:27:47 -0500</pubDate>
      
      <guid>https://sazl.ca/game-review/</guid>
      <description>Subnautica:  Amazing environment that&amp;rsquo;s varied and fun to explore. Really good sense of immersion and isolation, the ocean feels vast and terrifying. Great survival mechanics but I toned down the food as I found it a grind to keep having to forage. The story is compelling and there&amp;rsquo;s enough mystery to keep you playing. I was able to easily log 20+ hours on the main quest. The base building is fun and keeps the replay value high.</description>
    </item>
    
    <item>
      <title>Learning ATS</title>
      <link>https://sazl.ca/learning-ats/</link>
      <pubDate>Sun, 17 Feb 2019 16:58:46 -0500</pubDate>
      
      <guid>https://sazl.ca/learning-ats/</guid>
      <description>Resources Glot.io: Pastebin-like service with ATS support https://glot.io/
Blogs Metasepi: Low level programming in ATS http://metasepi.org/en/posts.html
Bluish Coder: https://bluishcoder.co.nz/tags/ats/index.html
Steinway Wu: http://steinwaywu.com/archive/
Introduction Imports Import: #include &amp;ldquo;share/atspre_staload.hats&amp;rdquo;
to resolve PMVtmplcast undefined error
https://stackoverflow.com/questions/51202203/how-to-solve-undefined-reference-to-dynloadflag</description>
    </item>
    
    <item>
      <title>Wikipedia API Notes</title>
      <link>https://sazl.ca/wikipedia-api-notes/</link>
      <pubDate>Sat, 22 Dec 2018 18:29:54 -0500</pubDate>
      
      <guid>https://sazl.ca/wikipedia-api-notes/</guid>
      <description>JSON Payload Namespaces:
https://en.wikipedia.org/wiki/Wikipedia:Namespace#Programming</description>
    </item>
    
    <item>
      <title>Digital Humanities Resources</title>
      <link>https://sazl.ca/digital-humanities-resources/</link>
      <pubDate>Mon, 17 Dec 2018 18:44:17 -0500</pubDate>
      
      <guid>https://sazl.ca/digital-humanities-resources/</guid>
      <description>Pleiades: https://pleiades.stoa.org/home
Features  Ancient World Locations, places, and features API Downloads Search  Summary  Pleiades gives scholars, students, and enthusiasts worldwide the ability to use, create, and share historical geographic information about the ancient world in digital form. At present, Pleiades has extensive coverage for the Greek and Roman world, and is expanding into Ancient Near Eastern, Byzantine, Celtic, and Early Medieval geography.  Papyri http://papyri.info/
Features  Ancient History Search Documents  Summary  Papyri.</description>
    </item>
    
    <item>
      <title>Year of the Five Emperors</title>
      <link>https://sazl.ca/year-of-the-five-emperors/</link>
      <pubDate>Sun, 16 Dec 2018 00:17:45 -0500</pubDate>
      
      <guid>https://sazl.ca/year-of-the-five-emperors/</guid>
      <description>I&amp;rsquo;ve recently been interested in reading about the lives of the Roman Emperors and their various intrigues. I&amp;rsquo;m having trouble keeping things in memory so I&amp;rsquo;ve started charting out the lines of succession.
Below is an example starting from Antonius Pius&#39; rule as part of the Nerva-Antonine Dynasty and ending on the last ruler of the Severan Dynasty.
   I&amp;rsquo;d love to automate this process but I&amp;rsquo;m having trouble tracking down resources.</description>
    </item>
    
    <item>
      <title>Change of Perspective</title>
      <link>https://sazl.ca/change-of-perspective/</link>
      <pubDate>Sat, 01 Dec 2018 20:03:25 -0500</pubDate>
      
      <guid>https://sazl.ca/change-of-perspective/</guid>
      <description>How NOT to Measure Latency by Gil Tene
Thinking Above the Code by Leslie Lamport
(https://www.youtube.com/watch?v=Rg8LfBRRR0o)</description>
    </item>
    
    <item>
      <title>Apple Jxa Notes</title>
      <link>https://sazl.ca/apple-jxa-notes/</link>
      <pubDate>Tue, 27 Nov 2018 20:07:08 -0500</pubDate>
      
      <guid>https://sazl.ca/apple-jxa-notes/</guid>
      <description>I&amp;rsquo;ve been using JXA at work to automate installations and upgrades of our desktop software. Typical of Apple APIs, it&amp;rsquo;s terribly documented and its level of support isn&amp;rsquo;t clear.
Besides the initial announcements and a smattering of content on the AppleScript pages, most information on JXA has to be pieced together from random forums and StackOverflow.
This was also my experience when dealing with trying to sign 3rd party apps on OSX.</description>
    </item>
    
    <item>
      <title>Appveyor Cygwin Build Tips</title>
      <link>https://sazl.ca/appveyor-cygwin-build-tips/</link>
      <pubDate>Sat, 20 Oct 2018 07:41:22 -0400</pubDate>
      
      <guid>https://sazl.ca/appveyor-cygwin-build-tips/</guid>
      <description>Some tips for working with Appveyor and Cygwin:
Git Client init: - git config --global core.symlinks true - git config --global core.autocrlf input  More Info: https://git-scm.com/book/en/v2/Customizing-Git-Git-Configuration#_code_core_autocrlf_code
Environment Variables Set Windows environment variables so that they&amp;rsquo;re accessible from within Cygwin.
init: - &#39;FOR /F &amp;quot;tokens=* USEBACKQ&amp;quot; %%F IN (`%CYG_PATH% %APPVEYOR_BUILD_FOLDER%`) DO SET BUILD_FOLDER=%%F&#39;  This is equivalent to:
export BUILD_FOLDER=$APPVEYOR_BUILD_FOLDER  Building on Cygwin x86 and x86_64 environment: matrix: - CYG_ARCH: x86 CYG_ROOT: C:/cygwin CYG_CACHE: C:/cygwin/var/cache/setup CYG_SH: C:/cygwin/bin/bash -lc CYG_INSTALL: C:/cygwin/setup-x86.</description>
    </item>
    
    <item>
      <title>The State of Python Profiling</title>
      <link>https://sazl.ca/the-state-of-python-profiling/</link>
      <pubDate>Fri, 12 Oct 2018 17:59:57 -0400</pubDate>
      
      <guid>https://sazl.ca/the-state-of-python-profiling/</guid>
      <description>There are no good python profiling tools. Here is what I consider necessary from a profiler:
 Cross platform Profiling of live applications Ability to generate profiler dumps (preferably gprof compatible) Call tree profiling Line-level profiling  The built-in python profilers cProfile and profile don&amp;rsquo;t meet 1, 2, and 5. 3rd party alternatives also fall short.
Pyflame A great live profiler:
 low overhead. live profiling of processes. generates profiler dumps, convertible to gprof and svg.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://sazl.ca/about/</link>
      <pubDate>Fri, 12 Oct 2018 17:55:50 -0400</pubDate>
      
      <guid>https://sazl.ca/about/</guid>
      <description>I like building stuff :)</description>
    </item>
    
    <item>
      <title>Computer Mythology</title>
      <link>https://sazl.ca/computer-mythology/</link>
      <pubDate>Thu, 27 Sep 2018 19:35:53 -0400</pubDate>
      
      <guid>https://sazl.ca/computer-mythology/</guid>
      <description>I love computer mythology, reading about old legends and great hackers surmounting the odds.
Linux: Where Don&#39;t We Want To Go Today? -- Submitted by Pancrazio De Mauro, paraphrasing some well-known sales talk  I also like that the communities are so different in their approaches to defining computing</description>
    </item>
    
    <item>
      <title>Tools for Software Architecture</title>
      <link>https://sazl.ca/tools-for-software-architecture/</link>
      <pubDate>Fri, 14 Sep 2018 18:12:43 -0400</pubDate>
      
      <guid>https://sazl.ca/tools-for-software-architecture/</guid>
      <description>Some thoughts on architecture and understanding big systems. If you can&amp;rsquo;t fit it all in your head, you don&amp;rsquo;t get it. We need tools to capture specifications and running systems more succinctly.
I&amp;rsquo;d like diagnostic and instrumentation tools that capture data like a modern factory&amp;rsquo;s control systems. I&amp;rsquo;d love to be able to drill down from a high level overview of the system to the operations of a single component, such as looking at a particular Kafka&amp;rsquo;s consumer group size.</description>
    </item>
    
    <item>
      <title>Tachyons Is Nice for Templates</title>
      <link>https://sazl.ca/tachyons-is-nice-for-templates/</link>
      <pubDate>Thu, 13 Sep 2018 20:47:12 -0400</pubDate>
      
      <guid>https://sazl.ca/tachyons-is-nice-for-templates/</guid>
      <description>Tachyons is Nice Tachyons.io is great for templates and prototypes. I wouldn&amp;rsquo;t write a full landing page in it or anything that&amp;rsquo;s not dynamically generated. Why? because it&amp;rsquo;s got the same problems as css class composition in HTML, there&amp;rsquo;s no way to group css classes you import.
An example:
&amp;lt;div class=&amp;quot;aside fl w-80 ma1 pa2 lh-copy&amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;aside-heading lh-title&amp;quot;&amp;gt;Technologies&amp;lt;/div&amp;gt; &amp;lt;ul class=&amp;quot;list pl0 pt3&amp;quot;&amp;gt; &amp;lt;/ul&amp;gt; &amp;lt;/div&amp;gt;  It gets hard to stack css classes into the html tag.</description>
    </item>
    
    <item>
      <title>Picking a Technology</title>
      <link>https://sazl.ca/picking-a-technology/</link>
      <pubDate>Tue, 31 Jul 2018 00:26:48 -0400</pubDate>
      
      <guid>https://sazl.ca/picking-a-technology/</guid>
      <description>Picking a technology, either:
 Pick a well-maintained, robust, and boring solution that gets you 90% of the way there. Pick a new solution that scratches your exact itch. You must be willing to maintain it yourself.  There is a trade-off between how specialized a tool is at solving your problem and how much work is involved in maintaining it over time.</description>
    </item>
    
    <item>
      <title>Go Link to Package Url</title>
      <link>https://sazl.ca/go-link-to-package-url/</link>
      <pubDate>Sun, 22 Jul 2018 13:51:09 -0400</pubDate>
      
      <guid>https://sazl.ca/go-link-to-package-url/</guid>
      <description>When creating a go pkg, please make your package URI point to actual documentation (if possible): k8s.io/kubernetes/pkg/kubectl/genericclioptions</description>
    </item>
    
    <item>
      <title>APL My Old Friend</title>
      <link>https://sazl.ca/apl-my-old-friend/</link>
      <pubDate>Wed, 11 Jul 2018 19:37:18 -0400</pubDate>
      
      <guid>https://sazl.ca/apl-my-old-friend/</guid>
      <description>I&amp;rsquo;ve been getting back into J after reading this twitter thread:
https://twitter.com/digitalbeard/status/987775955220430848
I first learned of J around 10 years ago. I remember reading &amp;ldquo;Easy J&amp;rdquo; and being amazed. Here was something so alien from everything I thought I knew about programming languages. The verbs, adverbs, and conjunctions were so cohesive, everything seemed to flow effortlessly. Writing J programs was somewhat akin to poetry, something explained better by Alan J. Perlis.</description>
    </item>
    
    <item>
      <title>Installing Kubernetes Using kubeadm</title>
      <link>https://sazl.ca/problems-in-the-kubaeadm-guide/</link>
      <pubDate>Mon, 20 Mar 2017 10:12:00 -0400</pubDate>
      
      <guid>https://sazl.ca/problems-in-the-kubaeadm-guide/</guid>
      <description>The deployment of Kubernetes has become a little easier using the kubeadm tool. The tools are still in alpha and the guide is still not as thorough as I would have hoped.
Installing Flannel as a Pod Network Once you&amp;rsquo;ve completed the first two steps, you should have a working master node. To add additional child nodes you must install a pod network. I chose to install Flannel but there are other options available.</description>
    </item>
    
  </channel>
</rss>
